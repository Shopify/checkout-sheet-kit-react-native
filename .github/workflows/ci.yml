name: CI Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    types: [opened, synchronize]

jobs:
  lint:
    name: Lint workspaces
    runs-on: shopify-ubuntu-latest
    env:
      TURBO_CACHE_DIR: .turbo/lint
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - run: yarn turbo run lint --cache-dir="${{ env.TURBO_CACHE_DIR }}"

  lint-swift:
    name: Lint Swift code
    runs-on: shopify-ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1
        with:
          args: --strict

  license:
    name: Verify license headers
    runs-on: shopify-ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: ./scripts/copy_license && git diff --name-only --exit-code

  build-native-module:
    name: Build Native Module
    runs-on: shopify-ubuntu-latest
    env:
      TURBO_CACHE_DIR: .turbo/react-native-shopify-checkout-kit
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - run: yarn turbo run build --cache-dir="${{ env.TURBO_CACHE_DIR }}"

  check-packed-files:
    name: Check package files
    runs-on: shopify-ubuntu-latest
    env:
      TERM: xterm
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Install jq
        run: sudo apt-get install -y jq

      - run: ./scripts/compare_snapshot

  build-android:
    name: Build Android Sample App
    runs-on: shopify-ubuntu-latest
    env:
      TURBO_CACHE_DIR: .turbo/android
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache turborepo for Android
        uses: actions/cache@v3
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-android-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-turborepo-android-

      - name: Check turborepo cache for Android
        run: |
          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run build:android --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'build:android').cache.status")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          fi

      - name: Install JDK
        if: env.turbo_cache_hit != 1
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Cache Gradle dependencies
        if: env.turbo_cache_hit != 1
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('sample/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: /usr/local/android-sdk
          key: ${{ runner.os }}-android-sdk
          restore-keys: |
            ${{ runner.os }}-android-sdk

      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: ./sample/android/app/build
          key: ${{ runner.os }}-build-${{ hashFiles('**/*.java', '**/*.xml', '**/*.gradle', '**/gradle.properties') }}

          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build example for Android
        run: |
          yarn turbo run build:android --cache-dir="${{ env.TURBO_CACHE_DIR }}"
